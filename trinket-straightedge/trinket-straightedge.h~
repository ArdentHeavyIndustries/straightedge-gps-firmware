#ifndef TRINKET_STRAIGHTEDGE_H
#define TRINKET_STRAIGHTEDGE_H 1

#define TESTING 1

/* Times and dates for 
/* N.B. 02:49 August 31st UTC = Sunday nightfall
 * Pre-event
 */
#ifndef TESTING
# define DUSK_START       7740L /* 19:04 PDT = 02:04 UTC */
# define NIGHT_START     10140L /* 19:49 PDT = 02:49 UTC */
# define EVENT_START_SEC 25200L /* 00:00 PDT = 07:00 UTC */
# define NIGHT_END       46800L /* 06:00 PDT = 13:00 UTC */
/* 10 hours and 11 minutes of blinky each day */
# define EVENT_START_DAY 242 /* August 31st in UTC-land */
#else
# define DUSK_START      (00L*3600L + 26L*60L)
# define NIGHT_START     (00L*3600L + 27L*60L)
# define EVENT_START_SEC 25200 /* 00:00 PDT = 07:00 UTC */
# define NIGHT_END       (00L*3600L + 28L*60L)
# define EVENT_START_DAY 212 /* August 31st in UTC-land */
#endif

/* Hardware configuration:
 * PPSPIN must be 2 for INT0 external interrupt
 */
#define RXPIN     0 /* GPS->trinket serial */
#define ENABLEPIN 1 /* GPS enable/on = high, disable/off = low */
#define PPSPIN    2 /* Pulse-per-second GPS->trinket */
#define TXPIN     3 /* trinket->GPS serial */
#define LEDPIN    4 /* LED control, high = on */

/* Serial comm with GPS */
#define RATE 9600

/* Data structure for date & time, always in UTC */
struct datetime_struct {
  /* Seconds since midnight UTC, 0 - 86399 */
  long secondInDay;
  /* Days since 1 January, in UTC */
  int dayInYear;
};

/* GPS fix data: UTC time from fix, along with internal clock time it was received */
struct fix_struct {
  struct datetime_struct fixDateTime;
  unsigned long fixReceiveMs;
  uint8_t fixValid;
};

/* States of the state machine */
enum state_enum {
  stateStartup,    /* A -- GPS on, await first fix */
  stateDaytime,    /* B -- GPS off, wait for dusk according to internal clock */
  stateDusk,       /* C -- GPS on, obtain fix and wait for nightfall in GPS time */
  stateNightPre,   /* D -- GPS off, blink on internal clock (unsynchronized) */
  stateNightStart, /* E -- GPS on, but blink on internal clock until event start according to GPS time */
  stateNightEvent  /* F -- GPS on, blink synchronzied with GPS */
};

/* Two kinds of functions for the state machine:
 * xxxLoop functions run repeatedly in the state, does "work" for the state (monitor GPS, blink LED, etc.) and returns the 
 * xxxEnter functions run once when switching into new state
 */
enum state_enum stateLoop(enum state_enum);

enum state_enum startupLoop(void);
enum state_enum daytimeLoop(void);
enum state_enum duskLoop(void);
enum state_enum nightPreLoop(void);
enum state_enum nightStartLoop(void);
enum state_enum nightEventLoop(void);

void enterState(enum state_enum nextState);
void startupEnter(void);
void daytimeEnter(void);
void duskEnter(void);
void nightPreEnter(void);
void nightStartEnter(void);
void nightEventEnter(void);


#endif
